java部分
1.在application.yml修改端口号
不要和Vue在一个8089端口上：

2.解决跨域问题
 Vue 使用 8089 端口，要访问 8088 端口的服务器，会报错。错误信息如下：

Access to XMLHttpRequest at 'http://localhost:8089/login' from origin 'http://localhost:8089' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.

这个问题在 Vue 端或在 Springboot 端处理都可以，
我是在 Springboot 端处理的，写一个 CorsConfig .java 类，不要忘了 @Configuration 注解。

3.定时任务
Java 定时任务的几种实现方式

基于 java.util.Timer 定时器，实现类似闹钟的定时任务
使用 Quartz、elastic-job、xxl-job 等开源第三方定时任务框架，适合分布式项目应用
使用 Spring 提供的一个注解： @Schedule，开发简单，使用比较方便，也是本文介绍的一种方式

Spring 自身提供了对定时任务的支持，使用Spring Boot 中 @Scheduled 定时器的使用。

首先，在项目启动类上添加 @EnableScheduling 注解，开启对定时任务的支持
@EnableScheduling注解的作用是发现注解@Scheduled的任务并后台执行。

其次，编写定时任务类和方法，定时任务类通过 Spring IOC 加载，使用 @Component 注解，定时方法使用 @Scheduled 注解。